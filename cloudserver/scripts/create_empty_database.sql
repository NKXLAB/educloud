CREATE TABLE PUBLIC.CLOUD_USER
(
    USER_ID  IDENTITY     NOT NULL,
    NAME     VARCHAR(400) NOT NULL,
    LOGIN    VARCHAR(100) NOT NULL,
    PASSWORD VARCHAR(50)  NOT NULL,
    TYPE     VARCHAR(10)  NOT NULL
);
CREATE SEQUENCE PUBLIC.SEQ_USER_ID START WITH 1 INCREMENT BY 1;


CREATE TABLE PUBLIC.SESSION
(
    SESSION_ID    IDENTITY     NOT NULL,
    USER_ID       INTEGER      NOT NULL,
    CREATION_DATE TIMESTAMP    NOT NULL,
    LAST_UPDATE   TIMESTAMP    NOT NULL,
    FOREIGN KEY(USER_ID) REFERENCES PUBLIC.CLOUD_USER(USER_ID) ON DELETE CASCADE
);

CREATE SEQUENCE PUBLIC.SEQ_SESSION_ID START WITH 1 INCREMENT BY 1;

CREATE TABLE PUBLIC.TEMPLATE
(
    TEMPLATE_ID IDENTITY      NOT NULL,
    OS_TYPE     VARCHAR(100)  NOT NULL,
    DESCRIPTION VARCHAR(4000) NOT NULL,
    NAME        VARCHAR(100)  NOT NULL,
    FILENAME    VARCHAR(400)  NOT NULL,
    MEMORY      BIGINT  NOT NULL
);
CREATE SEQUENCE PUBLIC.SEQ_TEMPLATE_ID START WITH 1 INCREMENT BY 1;

CREATE TABLE PUBLIC.NODE
(
    NODE_ID        IDENTITY      NOT NULL,
    HOSTNAME       VARCHAR(400)  NOT NULL,
    PORT           VARCHAR(20)   NOT NULL,
    START_TIME     TIMESTAMP     NOT NULL,
    LAST_PING      TIMESTAMP     NOT NULL,
    VBOX_VERSION   VARCHAR(400)          ,
    VBOX_CONNECTED BOOLEAN
);
CREATE SEQUENCE PUBLIC.SEQ_NODE_ID START WITH 1 INCREMENT BY 1;

CREATE TABLE PUBLIC.MACHINE
(
    MACHINE_ID       IDENTITY      NOT NULL,
    USER_ID          INTEGER       NOT NULL,
    NODE_ID          INTEGER,
    NAME             VARCHAR(400)  NOT NULL,
    DESCRIPTION      VARCHAR(4000) NOT NULL,
    OS_TYPE          VARCHAR(100)  NOT NULL,
    STATE            VARCHAR(20)   NOT NULL,
    MEMORY           BIGINT        NOT NULL,
    UUID             VARCHAR(36),
    BOOTABLE_MEDIUM  VARCHAR(400),
    VBOX_UUID        VARCHAR(36),
    VRDE_PORT        INTEGER,
    VRDE_USERNAME    VARCHAR(100),
    VRDE_PASSWORD    VARCHAR(50),
    FOREIGN KEY(NODE_ID)     REFERENCES PUBLIC.NODE(NODE_ID) ON DELETE SET NULL,
    FOREIGN KEY(USER_ID)     REFERENCES PUBLIC.CLOUD_USER(USER_ID) ON DELETE CASCADE
);
CREATE SEQUENCE PUBLIC.SEQ_MACHINE_ID START WITH 1 INCREMENT BY 1;

CREATE TABLE PUBLIC.MACHINE_LOG
(
	MACHINE_LOG_ID   IDENTITY      NOT NULL,
    MACHINE_ID       INTEGER       NOT NULL,
    MESSAGE          VARCHAR(4009)         ,
    LOG_TIME         TIMESTAMP     NOT NULL,
    FOREIGN KEY(MACHINE_ID) REFERENCES PUBLIC.MACHINE(MACHINE_ID) ON DELETE CASCADE
);
CREATE SEQUENCE PUBLIC.SEQ_MACHINE_LOG_ID START WITH 1 INCREMENT BY 1;

CREATE TABLE PUBLIC.TASK
(
    TASK_ID       IDENTITY     NOT NULL,
    STATUS        VARCHAR(20)  NOT NULL,
    TYPE          VARCHAR(20)  NOT NULL,
    SCHEDULE_TIME TIMESTAMP    NOT NULL
);
CREATE SEQUENCE PUBLIC.SEQ_TASK_ID START WITH 1 INCREMENT BY 1;

CREATE TABLE PUBLIC.TASK_PARAM
(
    TASK_ID       INTEGER       NOT NULL,
    NAME          VARCHAR(20)   NOT NULL,
    VALUE         VARCHAR(20),
    FOREIGN KEY(TASK_ID) REFERENCES PUBLIC.TASK(TASK_ID) ON DELETE CASCADE,
);

-- create cloud users
INSERT INTO CLOUD_USER (USER_ID, NAME, LOGIN, PASSWORD, TYPE) 
     VALUES ((VALUES NEXT VALUE FOR SEQ_USER_ID), 'Admin', 'admin', 'admin', 'ADMIN');

INSERT INTO CLOUD_USER (USER_ID, NAME, LOGIN, PASSWORD, TYPE) 
     VALUES ((VALUES NEXT VALUE FOR SEQ_USER_ID), 'Guest', 'guest', 'guest', 'USER');

-- create default template
INSERT INTO TEMPLATE (TEMPLATE_ID, OS_TYPE, NAME, DESCRIPTION, FILENAME, MEMORY) 
     VALUES ((VALUES NEXT VALUE FOR SEQ_TEMPLATE_ID), 'Ubuntu', 'Ubuntu minimal config', 'Ubuntu instalation without gnome', 'ubuntu-light.vdi', 192);
     
-- create default virtual machine for admin
INSERT INTO MACHINE (MACHINE_ID, USER_ID, NAME, DESCRIPTION, OS_TYPE, STATE, MEMORY) 
     VALUES ((VALUES NEXT VALUE FOR SEQ_MACHINE_ID), 1, 'Virtual machine of admin', 'Ubuntu instalation without gnome', 'Ubuntu', 'DONE', 192);
     
-- create default virtual machine for guest
INSERT INTO MACHINE (MACHINE_ID, USER_ID, NAME, DESCRIPTION, OS_TYPE, STATE, MEMORY) 
     VALUES ((VALUES NEXT VALUE FOR SEQ_MACHINE_ID), 2, 'Virtual machine of guest', 'Ubuntu instalation without gnome', 'Ubuntu', 'DONE', 192);